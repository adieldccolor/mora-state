
//fonts
@mixin CalibreMedium {
	font-family: 'Calibre Medium', sans-serif;
	-webkit-font-smoothing: antialiased;
}

@mixin CalibreRegular {
	font-family: 'Calibre Regular', sans-serif;
	-webkit-font-smoothing: antialiased;
}

@mixin MyriadPro-Regular {
	font-family: 'MyriadPro-Regular', sans-serif;
	-webkit-font-smoothing: antialiased;
}

@mixin NewBaskervilleStdItalic {
	font-family: 'NewBaskervilleStd Italic', serif;
	-webkit-font-smoothing: antialiased;
}

@mixin NewBaskervilleStdRoman {
	font-family: 'NewBaskervilleStd Roman', serif;
	-webkit-font-smoothing: antialiased;
}

@mixin NewBaskervilleStdSemiBold {
	font-family: 'NewBaskervilleStd SemiBold', serif;
	-webkit-font-smoothing: antialiased;
}

@mixin NewBaskervilleStdSemiBoldItalic {
	font-family: 'NewBaskervilleStd SemiBoldItalic', serif;
	-webkit-font-smoothing: antialiased;
}

@mixin SUWoodwardScript {
	font-family: 'SUWoodwardScript', serif;
	-webkit-font-smoothing: antialiased;
}



//colors
@mixin brand-color($color) { 
  @if map-has-key($colors, $color) {
    color: #{map-get($colors, $color)};
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$color}`. "
        + "Please make sure it is defined in `$colors` map.";
  }
}

@mixin brand-color-bg($color) { 
  @if map-has-key($colors, $color) {
    background-color: #{map-get($colors, $color)};
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$color}`. "
        + "Please make sure it is defined in `$colors` map.";
  }
}


//Media queries mixin
@mixin respond-to($breakpoint) { 
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}